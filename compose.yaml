services:
  server:
    container_name: server
    image: server-project:1.0
    ports:
      - "3001:3001"
    networks:
      - network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  # db:
  #   container_name: db
  #   image: postgres:16
  #   ports:
  #     - "${DB_PORT}:${DB_PORT}"
  #   networks:
  #     - network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 30s
  #   env_file:
  #     - .env
  #   environment:
  #     POSTGRES_DB: ${DB_DATABASE}
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     DATABASE_URL: ${DATABASE_URL}
  #   volumes:
  #     - db:/var/lib/postgresql/data
  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4:8.14
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - network
  #   env_file:
  #     - .env
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  # depends_on:
  #   - db
  web:
    container_name: web
    image: web-project:1.0
    ports:
      - "8090:80"
    networks:
      - network
    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          "curl -sf http://127.0.0.1:80 | grep -q '<app-root>'",
        ]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 30s
    # depends_on:
    #   - db

# volumes:
#   db:
networks:
  network:
    driver: bridge
